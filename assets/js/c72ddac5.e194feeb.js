"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4033],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,g=u["".concat(p,".").concat(h)]||u[h]||d[h]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5217:function(e,t,n){n.r(t),n.d(t,{default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"haplotypes",title:"Haplotype Proposal"},p={unversionedId:"guides/haplotypes",id:"guides/haplotypes",isDocsHomePage:!1,title:"Haplotype Proposal",description:"The set discovered candidate variants are used to assemble candidate haplotypes in an semi-exhaustive manner. Unlike other haplotype-based variant calling tools such as GATK HaplotypeCaller, Octopus does not require direct read evidence of a haplotype for it to be proposed. The main benifit of this approach is that transative physical read phasing can be exploited to cofidently call haplotypes longer than a single template length. The main downside is the additional runtimes complexity associated with exploring all 2N possible haplotypes given N/2 candidate non-overlapping variants.",source:"@site/docs/guides/haplotypes.md",sourceDirName:"guides",slug:"/guides/haplotypes",permalink:"/octopus/docs/guides/haplotypes",editUrl:"https://github.com/${organizationName}/${projectName}/edit/${branch}/website/docs/guides/haplotypes.md",version:"current",frontMatter:{id:"haplotypes",title:"Haplotype Proposal"},sidebar:"docs",previous:{title:"Variant Discovery",permalink:"/octopus/docs/guides/discovery"},next:{title:"Individual",permalink:"/octopus/docs/guides/models/individual"}},s=[{value:"Growth",id:"growth",children:[]},{value:"Lagging",id:"lagging",children:[]},{value:"Backtracking",id:"backtracking",children:[]}],c={toc:s};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The set ",(0,o.kt)("a",{parentName:"p",href:"/octopus/docs/guides/discovery"},"discovered candidate variants")," are used to assemble candidate haplotypes in an semi-exhaustive manner. Unlike other haplotype-based variant calling tools such as GATK HaplotypeCaller, Octopus does not require direct read evidence of a haplotype for it to be proposed. The main benifit of this approach is that transative physical read phasing can be exploited to cofidently call haplotypes longer than a single template length. The main downside is the additional runtimes complexity associated with exploring all 2",(0,o.kt)("sup",null,"N")," possible haplotypes given N/2 candidate non-overlapping variants. "),(0,o.kt)("h2",{id:"growth"},"Growth"),(0,o.kt)("p",null,"During the growth phase, novel alleles as appended to the branches of the haplotype tree. "),(0,o.kt)("h2",{id:"lagging"},"Lagging"),(0,o.kt)("h2",{id:"backtracking"},"Backtracking"))}d.isMDXComponent=!0}}]);